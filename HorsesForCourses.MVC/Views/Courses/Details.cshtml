@using HorsesForCourses.Application
@using HorsesForCourses.Application.Paging
@using HorsesForCourses.Application.dtos
@using HorsesForCourses.Infrastructure
@using HorsesForCourses.MVC
@using HorsesForCourses.MVC.ViewModels;
@model GetByIdResponse

@{
    ViewData["Title"] = "Course Details";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<h3>Coursedetails for @Model.Name</h3>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">ID:</dt>
        <dd class="col-sm-10">@Model.Id</dd>

        <dt class="col-sm-2">Status:</dt>
        <dd class="col-sm-10">@Model.Status</dd>

        <dt class="col-sm-2">From:</dt>
        <dd class="col-sm-10">@Model.StartDate</dd>

        <dt class="col-sm-2">Until:</dt>
        <dd class="col-sm-10">@Model.EndDate</dd>

        <div id="timeslots-container">
            @for (int i = 0; i < Model.TimeSlots.Count; i++)
            {
                <div class="row timeslot-row mb-2 align-items-center">
                    <dt class="col-sm-2">Day:</dt>
                    <dd class="col-sm-10">@Model.TimeSlots[i].Day</dd>

                </div>
                <div class="row timeslot-row mb-2 align-items-center">
                    <dt class="col-sm-2">Start time:</dt>
                    <dd class="col-sm-10">@Model.TimeSlots[i].Start</dd>
                </div>
                <div class="row timeslot-row mb-2 align-items-center">
                    <dt class="col-sm-2">End time:</dt>
                    <dd class="col-sm-10">@Model.TimeSlots[i].End</dd>
                </div>
            }
        </div>



    </dl>
</div>

@if (Model.Skills.Any())
{
    <div id="skills-container">
        @for (int i = 0; i < Model.Skills.Count; i++)
        {
            <div class="row skill-row mb-2 align-items-center">
                <dt class="col-sm-2">Skill @((i + 1)):</dt>
                <dd class="col-sm-10">@Model.Skills[i]</dd>
            </div>
        }
    </div>
}
else
{
    <p>This course does not have skill requirements yet.</p>
}

@if (Model.Coach != null)
{
    <div id="assigned-coaches-container">
        <dl class="row">
            <dt class="col-sm-2">Assigned coach:</dt>
            <dd class="col-sm-10">
                <a asp-controller="Coaches" asp-action="Details" asp-route-id="@Model.Coach.Id">
                    @Model.Coach.Name
                </a>
            </dd>
        </dl>
    </div>
}
else
{
    <em>No coach assigned.</em>
}


<div>
    @if (Model.Status == "Draft")
    {
        <form asp-action="Confirm" asp-route-id="@Model.Id" method="post" class="d-inline">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-success btn-sm">Confirm Course</button>
        </form>
    }

    @if (Model.Status == "Confirmed" && Model.Coach == null)
    {
        <a asp-action="AssignCoach" asp-route-id="@Model.Id" class="btn btn-success btn-sm">Assign Coach</a>
    }

    <a asp-action="EditSkills" asp-route-id="@Model.Id" class="btn btn-warning btn-sm">Edit skills</a>
    <a asp-action="EditTimeSlots" asp-route-id="@Model.Id" class="btn btn-warning btn-sm">Edit timeslot</a>
    <a asp-action="Index" class="btn btn-secondary btn-sm">Back to summary</a>
</div>

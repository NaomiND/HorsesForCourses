// <auto-generated />
using System;
using HorsesForCourses.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorsesForCourses.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("HorsesForCourses.Core.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("skills")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("HorsesForCourses.Core.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedCoachId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("Cursus");

                    b.Property<string>("ScheduledTimeSlots")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("skills")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedCoachId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("HorsesForCourses.Core.Coach", b =>
                {
                    b.OwnsOne("HorsesForCourses.Core.FullName", "Name", b1 =>
                        {
                            b1.Property<int>("CoachId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT")
                                .HasColumnName("Firstname");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT")
                                .HasColumnName("Lastname");

                            b1.HasKey("CoachId");

                            b1.ToTable("Coaches");

                            b1.WithOwner()
                                .HasForeignKey("CoachId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("HorsesForCourses.Core.Course", b =>
                {
                    b.HasOne("HorsesForCourses.Core.Coach", "AssignedCoach")
                        .WithMany()
                        .HasForeignKey("AssignedCoachId");

                    b.OwnsOne("HorsesForCourses.Core.PlanningPeriod", "Period", b1 =>
                        {
                            b1.Property<int>("CourseId")
                                .HasColumnType("INTEGER");

                            b1.Property<DateOnly>("EndDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("End date");

                            b1.Property<DateOnly>("StartDate")
                                .HasColumnType("TEXT")
                                .HasColumnName("Start date");

                            b1.HasKey("CourseId");

                            b1.ToTable("Courses");

                            b1.WithOwner()
                                .HasForeignKey("CourseId");
                        });

                    b.Navigation("AssignedCoach");

                    b.Navigation("Period")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
